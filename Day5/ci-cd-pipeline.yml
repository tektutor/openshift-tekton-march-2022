# Reserve 500 MB disk space for Persistent Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: maven-tekton-pv
spec:
  capacity:
    storage: 500Mi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain 
  nfs: 
    server: "192.168.1.80"
    path: "/mnt/nfs_share"
---
# Request for 500 disk space from one of the Persistent Volume
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: maven-tekton-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Mi
---
# Create a pipeline

apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: java-cicd-pipeline
spec:
  tasks:
    - name: clone-git-repo
      params:
        - name: url
          value: 'https://github.com/tektutor/spring-ms.git'

        # This is the git branch that you wish you clone
        - name: revision
          value: master
      taskRef:
        kind: Task
        name: git-clone
      workspaces:
        - name: output
          workspace: source-code

    # Task that compiles your maven project
    - name: compile
      params:
        - name: MAVEN_IMAGE
          value: >-
            gcr.io/cloud-builders/mvn@sha256:57523fc43394d6d9d2414ee8d1c85ed7a13460cbb268c3cd16d28cfb3859e641
        - name: GOALS
          value:
            - -Dmaven.repo.local=$(workspaces.maven-settings.path)
            - compile
      runAfter:
        - clone-git-repo
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: source
          workspace: source-code
        - name: maven-settings
          workspace: maven-repo

    # Task that performs unit-test on your maven project
    - name: test
      params:
        - name: MAVEN_IMAGE
          value: >-
            gcr.io/cloud-builders/mvn@sha256:57523fc43394d6d9d2414ee8d1c85ed7a13460cbb268c3cd16d28cfb3859e641
        - name: GOALS
          value:
            - -Dmaven.repo.local=$(workspaces.maven-settings.path)
            - test
      runAfter:
        - compile
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: source
          workspace: source-code
        - name: maven-settings
          workspace: maven-repo

    # Task that packages your unit-tested maven project
    - name: package
      params:
        - name: MAVEN_IMAGE
          value: >-
            gcr.io/cloud-builders/mvn@sha256:57523fc43394d6d9d2414ee8d1c85ed7a13460cbb268c3cd16d28cfb3859e641
        - name: GOALS
          value:
            - -Dmaven.repo.local=$(workspaces.maven-settings.path)
            - package
      runAfter:
        - test
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: source
          workspace: source-code
        - name: maven-settings
          workspace: maven-repo

    # Task that installs the packaged binaries into your local maven repository
    - name: install
      params:
        - name: MAVEN_IMAGE
          value: >-
            gcr.io/cloud-builders/mvn@sha256:57523fc43394d6d9d2414ee8d1c85ed7a13460cbb268c3cd16d28cfb3859e641
        - name: GOALS
          value:
            - -Dmaven.repo.local=$(workspaces.maven-settings.path)
            - install
      runAfter:
        - package
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: source
          workspace: source-code
        - name: maven-settings
          workspace: maven-repo
  workspaces:
    - name: source-code
    - name: maven-repo

---
# PipelineRun

apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: java-cicd-pipeline-run
spec:
  pipelineRef:
    name: java-cicd-pipeline
  serviceAccountName: default
  workspaces:
    - name: source-code
      persistentVolumeClaim:
        claimName: maven-tekton-pvc
      subPath: source
    - name: maven-repo 
      persistentVolumeClaim:
        claimName: maven-tekton-pvc
      subPath: m2
